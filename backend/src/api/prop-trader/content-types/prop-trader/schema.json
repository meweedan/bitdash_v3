{
  "kind": "collectionType",
  "collectionName": "prop-traders",
  "info": {
    "singularName": "prop-trader",
    "pluralName": "prop-traders",
    "displayName": "Prop Trader",
    "description": "Proprietary Trading Platform Users"
  },
  "options": {
    "draftAndPublish": false,
    "timestamps": true
  },
  "pluginOptions": {},
  "attributes": {
    "user": {
      "type": "relation",
      "relation": "oneToOne",
      "target": "plugin::users-permissions.user"
    },
    "status": {
      "type": "enumeration",
      "enum": ["pending", "active", "suspended", "terminated"],
      "default": "pending"
    },
    "challengeType": {
      "type": "enumeration",
      "enum": ["standard", "professional", "elite", "institutional"],
      "default": "standard"
    },
    "challengeStatus": {
      "type": "enumeration",
      "enum": ["not_started", "phase1", "phase2", "evaluation", "funded", "failed"],
      "default": "not_started"
    },
    "accountSize": {
      "type": "decimal",
      "default": 10000
    },
    "tradingStyle": {
      "type": "enumeration",
      "enum": ["day", "swing", "position", "scalping", "algorithmic"]
    },
    "profitTarget": {
      "type": "decimal",
      "default": 8
    },
    "maxDailyDrawdown": {
      "type": "decimal",
      "default": 2
    },
    "maxTotalDrawdown": {
      "type": "decimal",
      "default": 5
    },
    "challengeStartDate": {
      "type": "datetime"
    },
    "challengeEndDate": {
      "type": "datetime"
    },
    "profitSplitRatio": {
      "type": "decimal",
      "default": 80
    },
    "kycVerified": {
      "type": "boolean",
      "default": false
    },
    "tradingMetrics": {
      "type": "json"
    },
    "tradingHistory": {
      "type": "relation",
      "relation": "oneToMany",
      "target": "api::transaction.transaction",
      "mappedBy": "trader"
    },
    "preferredMarkets": {
      "type": "json"
    },
    "agreedToTerms": {
      "type": "boolean",
      "default": false,
      "required": true
    },
    "paymentMethods": {
      "type": "json"
    },
    "wallet": {
      "type": "relation",
      "relation": "oneToOne",
      "target": "api::wallet.wallet"
    }
  }
}